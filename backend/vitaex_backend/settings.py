"""
Django settings for vitaex_backend project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import environ
from pathlib import Path
import os
from cryptography.fernet import Fernet


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-+$c8h9a7ve2i-&vv1!2j8m&t)w!d27lx$ztukkm4d!@*!@0ar8'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'core',
    'corsheaders',
    'django_otp',
    'django_otp.plugins.otp_totp',
    'two_factor',
    # Apps del proyecto
    'banco_x_app',
    'noticiero_x_app',
    'tse_app',
    'universidad_x_app',
    'ministerio_salud_app',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django_otp.middleware.OTPMiddleware',  # necesario para OTP
]

ALLOWED_HOSTS = ['127.0.0.1', 'localhost', '10.0.2.2', '*']


# Inicializa django-environ
env = environ.Env()

# Lee el archivo .env
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))

# Variables de PayPal
PAYPAL_CLIENT_ID = env("PAYPAL_CLIENT_ID")
PAYPAL_CLIENT_SECRET = env("PAYPAL_CLIENT_SECRET")


CORS_ALLOWED_ORIGINS = [
    'http://localhost:3000',  # Si estás usando React en web
    'http://localhost:19006',
    'http://10.0.2.2:8000',  # Para Expo en React Native
    # otros dominios permitidos
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        # Requiere autenticación para todas las vistas por defecto
        'rest_framework.permissions.IsAuthenticated',
    ],
}


ROOT_URLCONF = 'vitaex_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'vitaex_backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# settings.py

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'vitaex_db',         # Nombre de la base de datos principal
        'USER': 'postgres',
        'PASSWORD': 'TrebysPost20',  # Contraseña del usuario
        'HOST': 'localhost',
        'PORT': '5432',
    },
    'banco_x': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'banco_x',
        'USER': 'postgres',
        'PASSWORD': 'TrebysPost20',  # Ajusta según tus credenciales
        'HOST': 'localhost',
        'PORT': '5432',
    },
    'noticiero_x': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'noticiero_x',
        'USER': 'postgres',
        'PASSWORD': 'TrebysPost20',  # Ajusta según tus credenciales
        'HOST': 'localhost',
        'PORT': '5432',
    },
    'tse': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'tse',
        'USER': 'postgres',
        'PASSWORD': 'TrebysPost20',  # Ajusta según tus credenciales
        'HOST': 'localhost',
        'PORT': '5432',
    },
    'universidad_x': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'universidad_x',
        'USER': 'postgres',
        'PASSWORD': 'TrebysPost20',  # Ajusta según tus credenciales
        'HOST': 'localhost',
        'PORT': '5432',
    },
    'ministerio_salud': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'ministerio_salud',
        'USER': 'postgres',
        'PASSWORD': 'TrebysPost20',  # Ajusta según tus credenciales
        'HOST': 'localhost',
        'PORT': '5432',
    },
}

#

DATABASE_ROUTERS = [
    'vitaex_backend.database_router.BancoXRouter',
    'vitaex_backend.database_router.NoticieroXRouter',
    'vitaex_backend.database_router.TSERouter',
    'vitaex_backend.database_router.UniversidadXRouter',
    'vitaex_backend.database_router.MinisterioSaludRouter',
]


AUTH_USER_MODEL = 'core.Usuario'

# settings.py

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',  # Identificador único para el caché en memoria
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
    {
        'NAME': 'core.validators.CustomPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'es-es'  # o el idioma y región preferidos
TIME_ZONE = 'America/Costa_Rica'  # ajusta según tu zona horaria
USE_I18N = True
USE_L10N = True
USE_TZ = True

# Correo
# Configuración SMTP usando Gmail
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = "vitaexlabs@gmail.com"  # Tu dirección de correo electrónico
# Tu contraseña de correo electrónico
EMAIL_HOST_PASSWORD = "hdye ltmm dteg ersc"

# EMAIL_HOST_USER = "estelopez2014@gmail.com"  # Tu dirección de correo electrónico
# EMAIL_HOST_PASSWORD = "pzvr jttc taez vqmu"


# Genera una clave una vez y guárdala en un lugar seguro
# Ejecuta una vez: Fernet.generate_key().decode()
ENCRYPTION_KEY = 'J9phw8OzWk1NzjH5d_oLKrIr7pTbBOqzMPvgx6vZ8mA='  # Clave de encriptación


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

# Revisar si lo necesito para la subida de archivos
STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'  # Para producción

# Definir el directorio donde se almacenarán los archivos cargados
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
FILE_UPLOAD_MAX_MEMORY_SIZE = 10485760  # 10 MB
# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
